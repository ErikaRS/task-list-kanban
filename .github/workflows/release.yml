name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.ref }}

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps & build
        run: |
          set -euo pipefail
          npm ci
          npm run build
          # Normalize common output locations to repo root
          if [ -f build/main.js ]; then mv -f build/main.js ./main.js; fi
          if [ -f dist/main.js ]; then mv -f dist/main.js ./main.js; fi

      - name: Verify required files
        run: |
          set -euo pipefail
          test -f manifest.json || (echo "manifest.json missing" && exit 1)
          test -f main.js || (echo "main.js missing (build did not produce it)" && exit 1)
          test -f styles.css || (echo "styles.css missing" && exit 1)
          test -f versions.json || (echo "versions.json missing" && exit 1)

      - name: Package release assets
        run: |
          set -euo pipefail
          rm -rf release
          mkdir -p release
          rm -f "${GITHUB_REPOSITORY#*/}.zip"
          cp manifest.json release/
          cp main.js release/
          if [ -f styles.css ]; then cp styles.css release/; fi
          (
            cd release
            zip -r "../${GITHUB_REPOSITORY#*/}.zip" .
          )

      - name: Collect release files
        id: release_files
        run: |
          set -euo pipefail
          files=(release/manifest.json release/main.js)
          if [ -f release/styles.css ]; then
            files+=(release/styles.css)
          fi
          files+=(versions.json)
          zip_file="${GITHUB_REPOSITORY#*/}.zip"
          if [ ! -f "$zip_file" ]; then
            echo "expected release archive $zip_file not found" >&2
            exit 1
          fi
          files+=("$zip_file")
          {
            echo "list<<EOF"
            printf '%s\n' "${files[@]}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.release_files.outputs.list }}
          overwrite: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify BRAT compatibility
        run: |
          # Give GitHub a moment to make the assets available for download
          sleep 5
          npm run check:brat
